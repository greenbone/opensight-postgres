name: trivy & grype & sarif & docker scout vulnerability scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  trivy:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    name: Trivy
    runs-on: self-hosted-generic
    steps:
      - name: Checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.2.2

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@dc5a429b52fcf669ce959baa2c2dd26090d2a6c4
        with:
          image-ref: '${{ vars.GREENBONE_REGISTRY }}/opensight/opensight-postgres:16'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'MEDIUM,HIGH,CRITICAL'
          github-pat: ${{ secrets.GITHUB_TOKEN }} # or ${{ secrets.github_pat_name }} if you're using a PAT
        env:
          TRIVY_USERNAME: ${{ secrets.GREENBONE_REGISTRY_READ_USER }}
          TRIVY_PASSWORD: ${{ secrets.GREENBONE_REGISTRY_READ_TOKEN }}

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@3c3833e0f8c1c83d449a7478aa59c036a9165498 # v3.29.5
        with:
          sarif_file: 'trivy-results.sarif'
          category: ${{ github.jobs[github.job].name }}

  grype:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    name: Grype
    runs-on: self-hosted-generic
    steps:
      - name: Checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.2.2

      - name: Login to Greenbone Product container registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 #v3.5.0
        with:
          registry: ${{ vars.GREENBONE_REGISTRY }}
          username: ${{ secrets.GREENBONE_REGISTRY_READ_USER }}
          password: ${{ secrets.GREENBONE_REGISTRY_READ_TOKEN }}

      - name: Run the Anchore Grype scan action
        uses: anchore/scan-action@1638637db639e0ade3258b51db49a9a137574c3e
        id: grype
        with:
          image: '${{ vars.GREENBONE_REGISTRY }}/opensight/opensight-postgres:16'
          fail-build: false
          severity-cutoff: medium

      - name: Upload grype vulnerability report
        uses: github/codeql-action/upload-sarif@3c3833e0f8c1c83d449a7478aa59c036a9165498 # v3.29.5
        with:
          sarif_file: ${{ steps.grype.outputs.sarif }}
          category: ${{ github.jobs[github.job].name }}

  docker-scout:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
      pull-requests: write
    name: "Docker Scout"
    runs-on: self-hosted-generic
    steps:
      - name: Checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.2.2

      - name: Login to Greenbone Product container registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 #v3.5.0
        with:
          registry: ${{ vars.GREENBONE_REGISTRY }}
          username: ${{ secrets.GREENBONE_REGISTRY_READ_USER }}
          password: ${{ secrets.GREENBONE_REGISTRY_READ_TOKEN }}

      - name: Analyze for critical and high CVEs
        id: docker-scout-cves
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: docker/scout-action@v1
        with:
          command: cves
          image: '${{ vars.GREENBONE_REGISTRY }}/opensight/opensight-postgres:16'
          sarif-file: sarif.output.json
          summary: true
          dockerhub-user: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub-password: ${{ secrets.DOCKERHUB_TOKEN }}
          only-severities: critical, high, medium

      - name: Upload docker scout SARIF result
        id: upload-sarif
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: github/codeql-action/upload-sarif@3c3833e0f8c1c83d449a7478aa59c036a9165498 # v3.29.5
        with:
          sarif_file: sarif.output.json
          category: ${{ github.jobs[github.job].name }}
