name: trivy & grype & sarif & docker scout vulnerability scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  #schedule:
  #  - cron: '24 23 * * 0'

permissions:
  contents: read

jobs:
  build:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    name: Build
    runs-on: "ubuntu-20.04"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build an image from Dockerfile
        run: |
          docker build -t greenbone/opensight-postgres:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        with:
          image-ref: 'greenbone/opensight-postgres:${{ github.sha }}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Run the Anchore Grype scan action
        uses: anchore/scan-action@d5aa5b6cb9414b0c7771438046ff5bcfa2854ed7
        id: grype
        with:
          image: "greenbone/opensight-postgres:${{ github.sha }}"
          fail-build: false

      - name: Upload grype vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.grype.outputs.sarif }}

      - name: Run Snyk to check Docker image for vulnerabilities
        # Snyk can be used to break the build when it detects vulnerabilities.
        # In this case we want to upload the issues to GitHub Code Scanning
        continue-on-error: true
        uses: snyk/actions/docker@14818c4695ecc4045f33c9cee9e795a788711ca4
        env:
          # In order to use the Snyk Action you will need to have a Snyk API token.
          # More details in https://github.com/snyk/actions#getting-your-snyk-token
          # or you can signup for free at https://snyk.io/login
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: "greenbone/opensight-postgres:${{ github.sha }}"
          args: --file=Dockerfile

      #- name: Upload snyk result to GitHub Code Scanning
       # uses: github/codeql-action/upload-sarif@v3
        #with:
         # sarif_file: snyk.sarif

      #- name: Analyze for critical and high CVEs
       # id: docker-scout-cves
        #if: ${{ github.event_name != 'pull_request_target' }}
        #uses: docker/scout-action@v1
        #with:
         # command: cves, recommendations, compare
          #image: "greenbone/opensight-postgres:${{ github.sha }}"
          #sarif-file: sarif.output.json
          #summary: true

      #- name: Upload docker scout SARIF result
       # id: upload-sarif
        #if: ${{ github.event_name != 'pull_request_target' }}
        #uses: github/codeql-action/upload-sarif@v2
        #with:
          #sarif_file: sarif.output.json
